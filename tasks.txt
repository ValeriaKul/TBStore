========= 15 Mar 2023 ==========

1)  создать страницы 
    - CategoriesPage
    - BasketPage
    - AllProductsPage
    - NotFoundPage

    подключить к роутингу

2)  подключить redux и отобразить просто списком названия категорий на странице CategoriesPage
    массив с категориями задать как defaultState
    ["electronics","jewelery","men's clothing","women's clothing"]

3)  создать навигационное меню с пунктами
    категории
    все товары
    корзина

    реализовать красный бордер для активной страницы

4)  реализовать страницу с категориями как на макете
    добавить компонент CategoryItem

5)  используя асинхронные action загрузить из API массив с категориями и отобразить его

6)  используя асинхронные action загрузить из API массив с товарами и отобразить его
    необходимо вывести только наименования товаров в отдельных параграфах
    на странице AllProductsPage

========= 20 Mar 2023 ==========

1)  создать страницу, которая будет отображать товары определенной категории
    данная страница отображается при переходе по ссылке /category/:category
    добавить ее в роутинг
    НЕ ДОБАВЛЯТЬ В NAV

2)  доработать CategoryItem и обернуть его в Link 
    при нажатии на Link должен быть переход на страницу с продуктами 
    соответствующей категории

3)  считать все продукты и оставить только те, у которых категория соответствует указанной в URL
    пройтись мапом по получившемуся массиву и вывести карточки продуктов 
    НЕ ДЕЛАЕМ ДОПОЛНИТЕЛЬНЫХ СЕТЕВЫХ ЗАПРОСОВ

4)  создать третью страницу ProductsPage и в роутинге использовать ее в случае всех товаров и в случае товаров определенной категории
    внутри компонента ProductsPage необходимо обрабатывать оба перехода с разных ссылок

========= 22 Mar 2023 ==========

1)  добавить новый page ProductDescriptionPage с URL /product/:id 
    при переходе по указанному адресу на странице должно отображаться название товара 
    НЕ ДЕЛАТЬ ДОПОЛНИТЕЛЬНЫХ сетевых запросов

2)  добавить переход на странциу с продуктом при нажатии на карточку с продуктом

3)  - создать reducer BasketReducer 
    - подключить его к state 
    - указаь значение по умолчанию
    [
        {id: 1, count: 3},
        {id: 2, count: 5}
    ]

    - на странцие корзины вывести в параграфах id и count

4)  реализовать обработчики на нажатие кнопок 
    при нажатии на + кол-во растет на 1
    при нажатии на - кол-во уменьшается на 1
    на данном этапе не обрабатываем уход количества в отрицательные значения

========= 27 Mar 2023 ==========
1)  реализовать процесс добавления продукта в корзину и повесить его на кнопки
    если такой товар в корзине уже есть у него необходимо увеличить count на 1
    если такого товара в корзине нет, то добавить его с count = 1

2)  реализовать кнопку удаления позиции из корзины

3)  добавить компонент BasketCalculation. B нем должно отображаться общее кол-во единиц продуктов в корзине

4)  добавить проверку на загруженность продуктов
    если продукты еще не загрузились - вывести отбивку "данные грузятся"

5)  доработать reducer таким образом, чтобы товары в корзине сохранялись в localStorage 
    и при загрузке страницы считывались оттуда

========= 29 Mar 2023 ==========
1)  создать компонент ProductsFilterBar и добавить в него поле ввода 
    при вводе значения оно должно выводиться в консоль

2)  добавить ветку условия PRODUCTS_SEARCH_FILTER
    в качестве payload мы передаем строку из полля ввода
    написать map который меняет продукты по следующей схеме
    если название продукта начинается на указанную строку
    то show true в ином случае show  false
    для реализации этой логики используйте метод startsWith

3)  добавить фильтрацию товаров и выводить только те, у которых show: true

4)  сделать поиск не регистрозависимым

5)  добавить type PRODUCTS_RESET_FILTER он проходится по всем товарам и указывает у них true
    вызвать dispatch с соответствующим action creator при загрузке ProductsPage

6)  добавить ветку условия для сортировки PRODUCTS_SORT_FILTER
    при 1 сортировать 0 -> 9
    при 2 сортировать 9 -> 0